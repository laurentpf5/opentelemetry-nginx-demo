user  nginx;
worker_processes  auto;
load_module modules/ngx_otel_module.so;
load_module modules/ngx_http_js_module.so;


error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


    otel_exporter {
         endpoint otel-collector:4317;
     }
     otel_service_name nginx-frontendproxy;
     
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # Access logging
    # You can customize NGINX's logging format to emulate OpenTelemetry's structured logging
    log_format otel_access_log '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" '
                              '$upstream_addr $request_time $upstream_response_time';

    access_log /var/log/nginx/access.log otel_access_log;

    # access_log  /var/log/nginx/access.log  main;

    #Pass request headers to the proxied server
    proxy_pass_request_headers      on;
    
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}