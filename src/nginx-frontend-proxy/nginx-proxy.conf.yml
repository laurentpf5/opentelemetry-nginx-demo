# Upstream clusters (Mapped from Envoy's clusters)
# Each upstream corresponds to an equivalent Envoy cluster

upstream opentelemetry_collector_grpc {
    server ${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_GRPC};
}

upstream opentelemetry_collector_http {
    server ${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_HTTP};
}

upstream frontend {
    server ${FRONTEND_HOST}:${FRONTEND_PORT};
}

upstream image_provider {
    server ${IMAGE_PROVIDER_HOST}:${IMAGE_PROVIDER_PORT};
}

upstream flagservice {
    server ${FLAGD_HOST}:${FLAGD_PORT};
}

upstream flagd_ui {
    server ${FLAGD_UI_HOST}:${FLAGD_UI_PORT};
}

upstream loadgen {
    server ${LOCUST_WEB_HOST}:${LOCUST_WEB_PORT};
}

upstream grafana {
    server ${GRAFANA_HOST}:${GRAFANA_PORT};
}

upstream jaeger {
    server ${JAEGER_HOST}:${JAEGER_PORT};
}

# Server block (Mapped from Envoy's listener)

server {
    listen ${NGINX_PORT};
    server_name _;


    otel_trace on;
    # /loadgen -> loadgen upstream
    location /loadgen {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://loadgen/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        otel_span_attr "request.id" $http_x_request_id;
        # proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
        rewrite ^/loadgen/?(.*)$ /$1 break;
    }

    # /otlp-http/ -> opentelemetry_collector_http upstream
    location /otlp-http/ {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://opentelemetry_collector_http/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        # proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
        rewrite ^/otlp-http/?(.*)$ /$1 break;
    }

    # /jaeger -> jaeger upstream
    location /jaeger {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://jaeger;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
    }

    # /grafana -> grafana upstream
    location /grafana {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
    }

    # /images/ -> image_provider upstream
    location /images/ {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://image_provider/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        # proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
        rewrite ^/images/?(.*)$ /$1 break;
    }

    # /flagservice/ -> flagservice upstream
    location /flagservice/ {
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://flagservice/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        # proxy_set_header traceparent $otel_trace_id;
        rewrite ^/flagservice/?(.*)$ /$1 break;
        # No timeout (timeout: 0s in Envoy)
        proxy_read_timeout 0;
    }

    #feature -> flagd_ui upstream
    location /feature {
        proxy_pass http://flagd_ui;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        otel_trace_context propagate;
        # otel_span_name "$request_method $uri";
        # proxy_set_header traceparent $otel_trace_id;
    }

    # catch-all ("/") -> frontend upstream
    location / {
        # otel_trace $otel_parent_sampled;
        otel_trace_context propagate;
        otel_span_name "$request_method $uri";
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        otel_span_attr "request.id" $http_x_request_id;
        # proxy_set_header traceparent $otel_trace_id;
        # proxy_set_header tracestate $otel_trace_state;
    }
}